{"version":3,"sources":["common-es5.js","webpack:///src/app/shared/service/playing-field.service.ts","webpack:///src/app/shared/service/register-worker.service.ts","webpack:///src/app/shared/utils/datePickerValidator.ts"],"names":[],"mappings":"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","file":"x","sourcesContent":["(window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || []).push([[\"common\"],{\n\n/***/ \"./src/app/shared/service/playing-field.service.ts\":\n/*!*********************************************************!*\\\n  !*** ./src/app/shared/service/playing-field.service.ts ***!\n  \\*********************************************************/\n/*! exports provided: PlayingFieldService */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PlayingFieldService\", function() { return PlayingFieldService; });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\n/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ \"./node_modules/@angular/core/fesm2015/core.js\");\n/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/common/http */ \"./node_modules/@angular/common/fesm2015/http.js\");\n/* harmony import */ var _env_environment__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @env/environment */ \"./src/environments/environment.ts\");\n\n\n\n\nconst API_URL = _env_environment__WEBPACK_IMPORTED_MODULE_3__[\"environment\"].apiUrl;\nlet PlayingFieldService = class PlayingFieldService {\n    constructor(http) {\n        this.http = http;\n    }\n    deletePFAvailability(id) {\n        return this.http.delete(`${API_URL}/worker/playingField/playingFieldAvailability/${id}`);\n    }\n    getPFSetup(id) {\n        return this.http.get(`${API_URL}/playingField/${id}/setup`);\n    }\n    getPFAvailabilities(id, showAll) {\n        return this.http.get(`${API_URL}/playingField/availabilities/${id}`, { params: { showAll: showAll } });\n    }\n    getMatches(id, searchDto, httpParams) {\n        return this.http.post(`${API_URL}/playingField/${id}/matches/search`, searchDto, { params: httpParams });\n    }\n};\nPlayingFieldService.ctorParameters = () => [\n    { type: _angular_common_http__WEBPACK_IMPORTED_MODULE_2__[\"HttpClient\"] }\n];\nPlayingFieldService = tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"]([\n    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Injectable\"])({\n        providedIn: \"root\"\n    }),\n    tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"](\"design:paramtypes\", [_angular_common_http__WEBPACK_IMPORTED_MODULE_2__[\"HttpClient\"]])\n], PlayingFieldService);\n\n\n\n/***/ }),\n\n/***/ \"./src/app/shared/service/register-worker.service.ts\":\n/*!***********************************************************!*\\\n  !*** ./src/app/shared/service/register-worker.service.ts ***!\n  \\***********************************************************/\n/*! exports provided: RegisterWorkerService */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RegisterWorkerService\", function() { return RegisterWorkerService; });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\n/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ \"./node_modules/@angular/core/fesm2015/core.js\");\n/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/common/http */ \"./node_modules/@angular/common/fesm2015/http.js\");\n/* harmony import */ var _env_environment__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @env/environment */ \"./src/environments/environment.ts\");\n\n\n\n\nconst API_URL = _env_environment__WEBPACK_IMPORTED_MODULE_3__[\"environment\"].apiUrl;\nlet RegisterWorkerService = class RegisterWorkerService {\n    constructor(http) {\n        this.http = http;\n    }\n    // registerWorker(userCredentials: UserCredentials, file:File){\n    //   let formData = new FormData();\n    //   formData.append('file', file);\n    //   formData.append('userCredentials', '{ \"username\": \"'+  userCredentials.username +'\",'+ '\"password\":\"'+userCredentials.password + '\"}')\n    //   return this.http\n    //     .post(`${API_URL}/workerRequests/worker/signup`, formData\n    //     );\n    // }\n    getWorkerRequests() {\n        return this.http.get(`${API_URL}/workerRequests`);\n    }\n    acceptWorkerRequest(id) {\n        const params = { \"decision\": \"true\" };\n        return this.http.put(`${API_URL}/workerRequests/` + id, null, { params });\n    }\n    declineWorkerRequest(id) {\n        const params = { \"decision\": \"false\" };\n        return this.http.put(`${API_URL}/workerRequests/` + id, null, { params });\n    }\n    sendRequestToAssignPF(pf, file) {\n        let formData = new FormData();\n        formData.append('file', file);\n        formData.append('playingField', '{ \"apiId\": \"' + pf.apiId + '\",' + '\"name\": \"' + pf.name + '\",' + '\"lat\":\"' + pf.location.lat + '\",' +\n            '\"lng\":\"' + pf.location.lng + '\",' + '\"formattedAddress\":\"' + pf.location.formattedAddress + '\"}');\n        return this.http.post(`${API_URL}/assignToWorker`, formData);\n    }\n    sendRequestToAssignPFAndRegister(pf, file, login, password) {\n        let formData = new FormData();\n        formData.append('file', file);\n        formData.append('playingField', '{ \"apiId\": \"' + pf.apiId + '\",' + '\"name\": \"' + pf.name + '\",' + '\"lat\":\"' + pf.location.lat + '\",' +\n            '\"lng\":\"' + pf.location.lng + '\",' + '\"formattedAddress\":\"' + pf.location.formattedAddress + '\"}');\n        formData.append('username', login);\n        formData.append('password', password);\n        return this.http.post(`${API_URL}/assignToWorkerAndRegister`, formData);\n    }\n};\nRegisterWorkerService.ctorParameters = () => [\n    { type: _angular_common_http__WEBPACK_IMPORTED_MODULE_2__[\"HttpClient\"] }\n];\nRegisterWorkerService = tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"]([\n    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Injectable\"])({\n        providedIn: 'root'\n    }),\n    tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"](\"design:paramtypes\", [_angular_common_http__WEBPACK_IMPORTED_MODULE_2__[\"HttpClient\"]])\n], RegisterWorkerService);\n\n\n\n/***/ }),\n\n/***/ \"./src/app/shared/utils/datePickerValidator.ts\":\n/*!*****************************************************!*\\\n  !*** ./src/app/shared/utils/datePickerValidator.ts ***!\n  \\*****************************************************/\n/*! exports provided: DatePickerValidator */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DatePickerValidator\", function() { return DatePickerValidator; });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\n/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/forms */ \"./node_modules/@angular/forms/fesm2015/forms.js\");\n\n\nclass DatePickerValidator extends _angular_forms__WEBPACK_IMPORTED_MODULE_1__[\"Validators\"] {\n    static fromDateValidator(fdValue) {\n        const date = fdValue.value;\n        if (date === null || date === '') {\n            return { requiredFromDate: true };\n        }\n    }\n    static ToDateValidator(todValue) {\n        const date = todValue.value;\n        if (date === null || date === '') {\n            return { requiredToDate: true };\n        }\n    }\n    // Not working\n    static timeValidator(formGroupValues) {\n        console.log(formGroupValues);\n        const FromDate = formGroupValues.get('FromDate').value;\n        const ToDate = formGroupValues.get('ToDate').value;\n        const FromTime = formGroupValues.get('FromTime').value;\n        const ToTime = formGroupValues.get('ToTime').value;\n        if (FromDate.toString() === ToDate.toString()) {\n            let fromTime = [];\n            let toTime = [];\n            fromTime = FromTime.split(':');\n            toTime = ToTime.split(':');\n            if (parseInt(fromTime[0]) > parseInt(toTime[0])) {\n                alert('condition satisfied not return any error message');\n                return { InValidToTime: true };\n            }\n            else if (parseInt(fromTime[0]) === parseInt(toTime[0]) &&\n                parseInt(fromTime[1]) > parseInt(toTime[1])) {\n                alert('condition satisfied not return any error message');\n                return { InValidToTime: true };\n            }\n        }\n    }\n}\n\n\n/***/ })\n\n}]);\n//# sourceMappingURL=common-es2015.js.map","import { Observable } from \"rxjs\";\r\nimport { Injectable } from \"@angular/core\";\r\n\r\nimport { HttpClient, HttpParams } from \"@angular/common/http\";\r\nimport { environment } from \"@env/environment\";\r\nimport { AvailabilityWithMatchesDto, MatchDto } from \"../model/availability\";\r\nimport { PlayingFieldSetupDto, SearchDto } from \"../model/playing-field\";\r\n\r\nconst API_URL = environment.apiUrl;\r\n\r\n@Injectable({\r\n  providedIn: \"root\"\r\n})\r\nexport class PlayingFieldService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  deletePFAvailability(id) {\r\n    return this.http.delete(\r\n      `${API_URL}/worker/playingField/playingFieldAvailability/${id}`\r\n    );\r\n  }\r\n  getPFSetup(id) {\r\n    return this.http.get<PlayingFieldSetupDto>(\r\n      `${API_URL}/playingField/${id}/setup`\r\n    );\r\n  }\r\n\r\n  getPFAvailabilities(id, showAll): Observable<AvailabilityWithMatchesDto[]> {\r\n    return this.http.get<AvailabilityWithMatchesDto[]>(\r\n      `${API_URL}/playingField/availabilities/${id}`,\r\n      { params: { showAll: showAll } }\r\n    );\r\n  }\r\n\r\n  getMatches(id, searchDto: SearchDto, httpParams?: HttpParams | any): Observable<any[]> {\r\n    return this.http.post<any[]>(\r\n      `${API_URL}/playingField/${id}/matches/search`,\r\n      searchDto, {params: httpParams}\r\n    );\r\n  }\r\n}\r\n","import { HttpParams, HttpHeaders, } from '@angular/common/http';\n\nimport { Observable } from 'rxjs';\nimport { Injectable } from '@angular/core';\nimport { UserDto, UserCredentials} from '../model';\n\nimport {HttpClient } from '@angular/common/http';\nimport { environment } from '@env/environment';\nimport { WorkerRequest } from '../model/worker-request';\nimport { PlayingFieldDto } from '../model/google-map';\n\n\nconst API_URL = environment.apiUrl;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RegisterWorkerService {\n\n  public user: UserDto;\n  constructor(private http: HttpClient) { }\n\n  // registerWorker(userCredentials: UserCredentials, file:File){\n  //   let formData = new FormData();\n  //   formData.append('file', file);\n  //   formData.append('userCredentials', '{ \"username\": \"'+  userCredentials.username +'\",'+ '\"password\":\"'+userCredentials.password + '\"}')\n\n  //   return this.http\n  //     .post(`${API_URL}/workerRequests/worker/signup`, formData\n  //     );\n  // }\n\n  getWorkerRequests(): Observable<WorkerRequest[]> {\n    return this.http.get<WorkerRequest[]>(`${API_URL}/workerRequests`);\n  }\n  acceptWorkerRequest(id: number) {\n    const params = { \"decision\" : \"true\"};\n    return this.http.put<any>(`${API_URL}/workerRequests/` + id, null, {params} );\n  }\n\n  declineWorkerRequest(id: number) {\n    const params = { \"decision\" : \"false\"};\n    return this.http.put<any>(`${API_URL}/workerRequests/` + id, null, {params} );\n  }\n  sendRequestToAssignPF(pf: PlayingFieldDto, file:File){\n    let formData = new FormData();\n    formData.append('file', file);\n    formData.append('playingField', '{ \"apiId\": \"'+  pf.apiId +'\",'+ '\"name\": \"'+ pf.name + '\",'+'\"lat\":\"'+pf.location.lat+ '\",'+\n    '\"lng\":\"'+pf.location.lng +'\",'+  '\"formattedAddress\":\"'+pf.location.formattedAddress + '\"}');\n\n    return this.http.post(`${API_URL}/assignToWorker`, formData);\n  }\n\n  sendRequestToAssignPFAndRegister(pf: PlayingFieldDto, file:File, login: string, password: string): Observable<any> {\n    let formData = new FormData();\n    formData.append('file', file);\n    formData.append('playingField', '{ \"apiId\": \"'+  pf.apiId +'\",'+ '\"name\": \"'+ pf.name + '\",'+'\"lat\":\"'+pf.location.lat+ '\",'+\n    '\"lng\":\"'+pf.location.lng +'\",'+  '\"formattedAddress\":\"'+pf.location.formattedAddress + '\"}');\n    formData.append('username', login);\n    formData.append('password', password);\n\n    return this.http.post(`${API_URL}/assignToWorkerAndRegister`, formData);\n  }\n\n\n\n}\n","import { AbstractControl, FormControl, FormGroup, ValidatorFn, Validators } from '@angular/forms';\r\n\r\nexport class DatePickerValidator extends Validators {\r\n\r\n   static fromDateValidator(fdValue: FormControl) {\r\n    const date = fdValue.value;\r\n    if (date === null || date === '') { return { requiredFromDate: true }; }\r\n\r\n  }\r\n\r\n   static ToDateValidator(todValue: FormControl) {\r\n    const date = todValue.value;\r\n\r\n    if (date === null || date === '') { return { requiredToDate: true }; }\r\n\r\n  }\r\n\r\n// Not working\r\n  static timeValidator(formGroupValues: FormGroup): any {\r\n    console.log(formGroupValues);\r\n    const FromDate = formGroupValues.get('FromDate').value;\r\n    const ToDate = formGroupValues.get('ToDate').value;\r\n    const FromTime = formGroupValues.get('FromTime').value;\r\n    const ToTime = formGroupValues.get('ToTime').value;\r\n\r\n    if (FromDate.toString() === ToDate.toString()) {\r\n      let fromTime = [];\r\n      let toTime = [];\r\n      fromTime = FromTime.split(':');\r\n      toTime = ToTime.split(':');\r\n      if (parseInt(fromTime[0]) > parseInt(toTime[0])) {\r\n      alert('condition satisfied not return any error message');\r\n      return { InValidToTime: true };\r\n        } else if (\r\n        parseInt(fromTime[0]) === parseInt(toTime[0]) &&\r\n        parseInt(fromTime[1]) > parseInt(toTime[1])\r\n      ) {  alert('condition satisfied not return any error message');\r\n          return { InValidToTime: true };\r\n      }\r\n    }\r\n  }\r\n}\r\n"]}